apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: kube-oidc-proxy
  name: kube-oidc-proxy
  namespace: auth
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      name: kube-oidc-proxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: kube-oidc-proxy
    spec:
      containers:
      - command:
        - kube-oidc-proxy
        - --secure-port=8443
        - --tls-cert-file=/etc/kube-oidc-proxy/tls/tls.crt
        - --tls-private-key-file=/etc/kube-oidc-proxy/tls/tls.key
        - '--oidc-groups-prefix=dex:'
        - --oidc-groups-claim=groups
        - --oidc-client-id=$(OIDC_CLIENT_ID)
        - --oidc-issuer-url=$(OIDC_ISSUER_URL)
        - --token-passthrough
        - --oidc-username-claim=email
        - --oidc-ca-file=/etc/kube-oidc-proxy/tls/ca.crt
        env:
        - name: OIDC_CLIENT_ID
          value: "gangway-oauth2client"
        - name: OIDC_ISSUER_URL
          value: "https://dex.auth.svc.cluster.local:5558"
        image: quay.io/jetstack/kube-oidc-proxy:v0.3.0
        imagePullPolicy: IfNotPresent
        name: kube-oidc-proxy
        ports:
        - containerPort: 8080
          name: probe
          protocol: TCP
        - containerPort: 8443
          name: serving
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kube-oidc-proxy/oidc
          name: oidc
          readOnly: true
        - mountPath: /etc/kube-oidc-proxy/tls
          name: serving
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kube-oidc-proxy
      serviceAccountName: kube-oidc-proxy
      terminationGracePeriodSeconds: 30
      volumes:
      - name: oidc
        secret:
          defaultMode: 420
          secretName: kube-oidc-proxy-config
      - name: serving
        secret:
          defaultMode: 420
          secretName: kube-oidc-proxy-tls
